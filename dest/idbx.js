function f(e,t){let r=indexedDB.open(e,t);return{upgrade:s=>{r.onupgradeneeded=s},blocked:s=>{r.onblocked=s},ready:new Promise((s,l)=>{r.onsuccess=()=>s(r.result),r.onerror=()=>l(r.error)})}}function n(e){return new Promise((t,r)=>{e.addEventListener("success",s=>{let l=s.target;t(l.result)}),e.addEventListener("error",s=>{let l=s.target;r(new Error(`IndexedDB error: ${l.error?.message}`))})})}function y(e,t,r){return n(e.add(t,r))}function R(e,t=[]){return Promise.all(t.map(r=>y(e,r)))}function D(e,t,r){return n(e.put(t,r))}function A(e,t=[]){return Promise.all(t.map(r=>D(e,r)))}function I(e,t){return n(e.delete(t))}function j(e,t){return Promise.all(t.map(r=>I(e,r)))}function v(e,t){return n(e.get(t))}function w(e,t,r){return n(e.getAll(t,r))}function M(e,t,r){return n(e.getAllKeys(t,r))}function F(e,t){return n(e.getKey(t))}function Q(e){return n(e.clear())}function Y(e,t){return n(e.count(t))}function c(e,t,r){let s=r.length;r.push([t,void 0]),e.onsuccess=l=>{let B=l.target.result;r[s]=[t,B===void 0?!0:B]},e.onerror=()=>{r[s]=[t,!1]}}function _(e,t,r){let s=new Set(t.map(a=>a.storeName)),l=Array.from(s),B=e.transaction(l,r),d=[];for(let a of t){let m=B.objectStore(a.storeName);switch(a.method){case"add":{let{data:o,key:u}=a;if(Array.isArray(o))for(let i of o)c(m.add(i,u),"add",d);else c(m.add(o,u),"add",d);break}case"put":{let{data:o,key:u}=a;if(Array.isArray(o))for(let i of o)c(m.put(i,u),"put",d);else c(m.put(o,u),"put",d);break}case"del":{if("keys"in a)for(let o of a.keys)c(m.delete(o),"del",d);else"key"in a&&c(m.delete(a.key),"del",d);break}case"clear":{c(m.clear(),"clear",d);break}case"get":{let{query:o}=a;c(m.get(o),"get",d);break}case"getAll":{let{query:o,count:u}=a;c(m.getAll(o,u),"getAll",d);break}case"getAllKeys":{let{query:o,count:u}=a;c(m.getAllKeys(o,u),"getAllKeys",d);break}case"getKey":{let{query:o}=a;c(m.getKey(o),"getKey",d);break}case"count":{let{query:o}=a;c(m.count(o),"count",d);break}}}return{abort:()=>B.abort(),completed:new Promise((a,m)=>{B.oncomplete=()=>a(d),B.onerror=()=>m(B.error)})}}export{y as add,R as addBulk,_ as batch,Q as clear,Y as count,I as del,j as delBulk,v as get,w as getAll,M as getAllKeys,F as getKey,f as open,D as put,A as putBulk};
//# sourceMappingURL=idbx.js.map
