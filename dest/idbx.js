function f(e,t){let r=indexedDB.open(e,t);return{upgrade:a=>{r.onupgradeneeded=a},blocked:a=>{r.onblocked=a},ready:new Promise((a,l)=>{r.onsuccess=()=>a(r.result),r.onerror=()=>l(r.error)})}}function n(e){return new Promise((t,r)=>{e.addEventListener("success",a=>{let l=a.target;t(l.result)}),e.addEventListener("error",a=>{let l=a.target;r(new Error(`IndexedDB error: ${l.error?.message}`))})})}function y(e,t,r){return n(e.add(t,r))}function R(e,t=[]){return Promise.all(t.map(r=>y(e,r)))}function D(e,t,r){return n(e.put(t,r))}function C(e,t=[]){return Promise.all(t.map(r=>D(e,r)))}function I(e,t){return n(e.delete(t))}function j(e,t){return Promise.all(t.map(r=>I(e,r)))}function v(e,t){return n(e.get(t))}function w(e,t,r){return n(e.getAll(t,r))}function M(e,t,r){return n(e.getAllKeys(t,r))}function F(e,t){return n(e.getKey(t))}function Q(e){return n(e.clear())}function Y(e,t){return n(e.count(t))}function d(e,t,r){let a=r.length;r.push([t,void 0]),e.onsuccess=l=>{let i=l.target.result;r[a]=[t,i===void 0?!0:i]},e.onerror=()=>{r[a]=[t,!1]}}function _(e,t,r){let a=new Set(t.map(s=>s.storeName)),l=Array.from(a),i=e.transaction(l,r),c=[];for(let s of t){let m=i.objectStore(s.storeName);switch(s.method){case"add":{let{data:o,key:u}=s;if(Array.isArray(o))for(let B of o)d(m.add(B,u),"add",c);else d(m.add(o,u),"add",c);break}case"put":{let{data:o,key:u}=s;if(Array.isArray(o))for(let B of o)d(m.put(B,u),"put",c);else d(m.put(o,u),"put",c);break}case"delete":case"del":{let{key:o}=s;if(Array.isArray(o))for(let u of o)d(m.delete(u),"del",c);else d(m.delete(o),"del",c);break}case"clear":{d(m.clear(),"clear",c);break}case"get":{let{query:o}=s;d(m.get(o),"get",c);break}case"getAll":{let{query:o,count:u}=s;d(m.getAll(o,u),"getAll",c);break}case"getAllKeys":{let{query:o,count:u}=s;d(m.getAllKeys(o,u),"getAllKeys",c);break}case"getKey":{let{query:o}=s;d(m.getKey(o),"getKey",c);break}case"count":{let{query:o}=s;d(m.count(o),"count",c);break}}}return{abort:()=>i.abort(),completed:new Promise((s,m)=>{i.oncomplete=()=>s(c),i.onerror=()=>m(i.error)})}}export{y as add,R as addBulk,_ as batch,Q as clear,Y as count,I as del,j as delBulk,v as get,w as getAll,M as getAllKeys,F as getKey,f as open,D as put,C as putBulk};
//# sourceMappingURL=idbx.js.map
